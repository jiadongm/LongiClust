% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functionalKmeansRP.R
\name{functionalKmeansRP}
\alias{functionalKmeansRP}
\title{Functional K-Means Clustering with Random Projections}
\usage{
functionalKmeansRP(
  X_list,
  Q_B,
  k_clusters = 2,
  nstart = 25,
  iter_max = 100,
  verbose = FALSE
)
}
\arguments{
\item{X_list}{List of length d0. Each element is an n x grid_length matrix
representing one dimension of the multivariate functional data}

\item{Q_B}{Object of class 'random_projections' from generateRP()}

\item{k_clusters}{Integer. Number of clusters (default: 2)}

\item{nstart}{Integer. Number of random starts for k-means (default: 25)}

\item{iter_max}{Integer. Maximum iterations for k-means (default: 100)}

\item{verbose}{Logical. Print progress messages (default: FALSE)}
}
\value{
List containing:
  \item{optimal_projection}{Index of the optimal projection in Q_B}
  \item{optimal_Psi}{The optimal projection object}
  \item{cluster_labels}{Vector of cluster assignments (1 to k)}
  \item{projected_data}{n x d0 matrix of data projected onto optimal Psi}
  \item{tightness_values}{Vector of tightness values for each projection}
  \item{min_tightness}{Minimum tightness value achieved}
  \item{centers}{Cluster centers in projected space}
  \item{within_ss}{Within-cluster sum of squares for each cluster}
  \item{total_within_ss}{Total within-cluster sum of squares}
}
\description{
Implements the functional K-means algorithm using random projections to find
the optimal projection for clustering multivariate functional data.

This function follows the algorithm from the manuscript:
1. For each random projection Ψ*_b in Q_B:
   - Project the multivariate functional data onto Ψ*_b
   - Perform k-means clustering on the projected data
   - Compute the tightness criterion T̂(Ψ*_b)
2. Select the projection Ψ̂_QB that minimizes T̂(Ψ)
}
\details{
The tightness criterion is defined as:
\deqn{T̂(Î_1, Î_2 | Ψ) = \sum_{j=1}^{d_0} \frac{1}{\hat{\sigma}^2(\psi_j)}
      \frac{1}{n} \sum_{k=1}^2 \sum_{i \in Î_k} [X_{i,j}(\psi_j) - \bar{X}_{k,j}(\psi_j)]^2}

where \eqn{\hat{\sigma}^2(\psi_j)} is the sample variance of the j-th projected dimension.
}
\examples{
\dontrun{
# Generate simulation data
data1 <- simulate_functional_data(
  within_var = 0.3, between_sep = 2.5,
  start1_mean = 2, start1_sd = 0.3,
  end1_mean = 0, end1_sd = 0.3,
  start2_mean = 0, start2_sd = 0.3,
  end2_mean = 4, end2_sd = 0.3
)

# For univariate functional data (d0 = 1)
X_list <- list(data1$all_curves)

# Generate random projections
Q_B <- generateRP(B = 100, d0 = 1, r = 10, basis = "bspline")

# Run functional K-means
result <- functionalKmeansRP(X_list, Q_B, k_clusters = 2)

# Check clustering accuracy
table(Predicted = result$cluster_labels, True = data1$true_labels)
}

}
